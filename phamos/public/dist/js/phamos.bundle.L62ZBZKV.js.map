{
  "version": 3,
  "sources": ["../../../../../apps/phamos/phamos/public/js/have_a_great_day.js"],
  "sourcesContent": ["class MorningFeedbackDialog {\n  constructor() {\n    this.dialog = null;\n    this.init();\n  }\n\n  init() {\n    var self = this;\n    // Function to convert time string \"HH:MM:SS\" to total seconds\n    function timeToSeconds(timeStr) {\n      var parts = timeStr.split(\":\");\n      var hours = parseInt(parts[0], 10) || 0;\n      var minutes = parseInt(parts[1], 10) || 0;\n      var seconds = parseInt(parts[2], 10) || 0;\n      return hours * 3600 + minutes * 60 + seconds;\n    }\n\n    // Check if current time is between specific timeframes\n    frappe.call({\n      method:\n        \"phamos.phamos.doctype.have_a_great_day.have_a_great_day.get_user_time\",\n      args: { user: frappe.session.user },\n      callback: function (response) {\n        if (response.message) {\n          // Extract time strings\n          var userTimeStr = response.message.user_time_str || \"00:00:00\";\n          var fromTimeStr = response.message.from_time || \"00:00:00\";\n          var tillTimeStr = response.message.till_time || \"23:59:59\";\n          var enable_feedback_dialog = response.message.enable_feedback_dialog;\n\n          // Convert time strings to seconds\n          var userTimeSeconds = timeToSeconds(userTimeStr);\n          var fromTimeSeconds = timeToSeconds(fromTimeStr);\n          var tillTimeSeconds = timeToSeconds(tillTimeStr);\n\n          // Compare the total seconds\n          if (\n            fromTimeSeconds <= userTimeSeconds &&\n            userTimeSeconds <= tillTimeSeconds &&\n            enable_feedback_dialog == 1\n          ) {\n            self.showFeedbackDialog();\n          } else {\n          }\n        } else {\n          console.error(\"Failed to fetch user time.\");\n        }\n      },\n      error: function (error) {\n        console.error(\"Error:\", error);\n      },\n    });\n  }\n\n  showFeedbackDialog() {\n    var self = this;\n    // Ensure current time is between 8 am to 9 pm\n    const user_date_fmt = frappe.datetime.get_user_date_fmt().toUpperCase();\n    const user_time_fmt = frappe.datetime.get_user_time_fmt();\n\n    frappe.db.get_value(\n      \"phamos Settings\",\n      {},\n      \"is_employee_feedback\",\n      function (value) {\n        if (value && value.is_employee_feedback == 1) {\n          frappe.db.get_value(\n            \"Employee\",\n            { user_id: frappe.session.user },\n            \"name\",\n            function (value_user) {\n              if (value_user && value_user.name) {\n                var today_date = frappe.datetime.nowdate(); // Get today's date in YYYY-MM-DD format\n                frappe.db.get_value(\n                  \"Have a Great Day\",\n                  {\n                    user: frappe.session.user,\n                    creation_date: today_date, // Directly compare with today's date\n                  },\n                  \"name\",\n                  function (value_feedback) {\n                    if (value_feedback && value_feedback.name) {\n                      // Feedback exists for today\n                    } else {\n                      // No feedback found for today\n                      self.dialog_box(); // Show dialog box if feedback for today does not exist\n                    }\n                  }\n                );\n              } else {\n                //frappe.throw(__(\"Employee not found for the current user.\"));\n              }\n            }\n          );\n        } else if (value && value.is_employee_feedback == 0) {\n          var today_date = frappe.datetime.nowdate(); // Get today's date in YYYY-MM-DD format\n          frappe.db.get_value(\n            \"Have a Great Day\",\n            {\n              user: frappe.session.user,\n              creation_date: today_date, // Directly compare with today's date\n            },\n            \"name\",\n            function (value_feedback) {\n              if (value_feedback && value_feedback.name) {\n                // Feedback exists for today\n              } else {\n                // No feedback found for today\n                self.dialog_box(); // Show dialog box if feedback for today does not exist\n              }\n            }\n          );\n        }\n      }\n    );\n  }\n\n  dialog_box() {\n    // Function to show the dialog box with fields\n    this.dialog = new frappe.ui.Dialog({\n      title: __(\"Have a Great Day!\"),\n      fields: [\n        {\n          fieldtype: \"Small Text\",\n          label: __(\"What are you most looking forward to today?\"),\n          fieldname: \"lookingForward\",\n          in_list_view: 1,\n          reqd: 1, // Required field\n        },\n        {\n          fieldtype: \"Column Break\",\n        },\n        {\n          fieldtype: \"Small Text\",\n          label: __(\"What challenge will you tackle today?\"),\n          fieldname: \"todaysChallenge\",\n          in_list_view: 1,\n          reqd: 1, // Required field\n          default: \"\",\n        },\n      ],\n      primary_action_label: __(\"Save\"),\n      primary_action: (values) => {\n        this.submit(values);\n        this.dialog.hide();\n      },\n    });\n\n    this.dialog.$wrapper.find(\".modal-dialog\").css(\"max-width\", \"500px\");\n    this.dialog.show();\n  }\n\n  submit(values) {\n    // Handle form submission or call backend method\n    this.createRecord(values.lookingForward, values.todaysChallenge);\n\n    // Hide the dialog after submission\n    this.dialog.hide();\n  }\n\n  createRecord(lookingForward, todaysChallenge) {\n    var self = this;\n\n    // Example: Use frappe.call or any backend API to create a record\n    frappe.call({\n      method:\n        \"phamos.phamos.doctype.have_a_great_day.have_a_great_day.create_todays_feedback\",\n      args: {\n        lookingForward: lookingForward,\n        todaysChallenge: todaysChallenge,\n      },\n      callback: function (response) {\n        frappe.msgprint(__(\"Feedback submitted successfully!\"));\n      },\n    });\n  }\n}\n\n// Instantiate the dialog class when the document is ready\n$(document).on(\"app_ready\", function () {\n  new MorningFeedbackDialog();\n});\n"],
  "mappings": "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",
  "names": ["MorningFeedbackDialog", "self", "timeToSeconds", "timeStr", "parts", "hours", "minutes", "seconds", "response", "userTimeStr", "fromTimeStr", "tillTimeStr", "enable_feedback_dialog", "userTimeSeconds", "fromTimeSeconds", "tillTimeSeconds", "error", "user_date_fmt", "user_time_fmt", "value", "value_user", "today_date", "value_feedback", "values", "lookingForward", "todaysChallenge"]
}
